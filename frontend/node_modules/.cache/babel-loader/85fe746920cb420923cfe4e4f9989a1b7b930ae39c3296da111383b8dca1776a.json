{"ast":null,"code":"var _jsxFileName = \"/home/asiradnan/A Laptop/Kaj Kormo/Code/Paid Projects/RannBhai-2.0/frontend/src/components/MealPlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MealPlanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEALS_DATABASE = {\n  breakfast: [{\n    id: 1,\n    name: \"Oatmeal with Berries\",\n    calories: 350,\n    protein: \"12g\",\n    carbs: \"45g\",\n    fat: \"8g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Steel-cut oats topped with mixed berries, honey, and almonds\"\n  }, {\n    id: 2,\n    name: \"Greek Yogurt Parfait\",\n    calories: 280,\n    protein: \"15g\",\n    carbs: \"32g\",\n    fat: \"6g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Layered Greek yogurt with granola and fresh fruits\"\n  }, {\n    id: 3,\n    name: \"Avocado Toast\",\n    calories: 420,\n    protein: \"14g\",\n    carbs: \"38g\",\n    fat: \"18g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Whole grain toast with mashed avocado, eggs, and cherry tomatoes\"\n  }, {\n    id: 4,\n    name: \"Protein Smoothie Bowl\",\n    calories: 310,\n    protein: \"20g\",\n    carbs: \"42g\",\n    fat: \"5g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Protein-packed smoothie with banana, berries, and chia seeds\"\n  }],\n  lunch: [{\n    id: 1,\n    name: \"Quinoa Buddha Bowl\",\n    calories: 450,\n    protein: \"18g\",\n    carbs: \"52g\",\n    fat: \"12g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Quinoa bowl with roasted vegetables, chickpeas, and tahini dressing\"\n  }, {\n    id: 2,\n    name: \"Grilled Chicken Salad\",\n    calories: 380,\n    protein: \"32g\",\n    carbs: \"18g\",\n    fat: \"14g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Mixed greens with grilled chicken, avocado, and balsamic vinaigrette\"\n  }, {\n    id: 3,\n    name: \"Turkey Wrap\",\n    calories: 420,\n    protein: \"28g\",\n    carbs: \"48g\",\n    fat: \"16g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Whole wheat wrap with turkey, vegetables, and hummus\"\n  }, {\n    id: 4,\n    name: \"Mediterranean Bowl\",\n    calories: 520,\n    protein: \"22g\",\n    carbs: \"56g\",\n    fat: \"15g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Falafel bowl with tabbouleh, hummus, and mixed vegetables\"\n  }],\n  dinner: [{\n    id: 1,\n    name: \"Salmon with Quinoa\",\n    calories: 520,\n    protein: \"38g\",\n    carbs: \"42g\",\n    fat: \"22g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Baked salmon with quinoa and roasted Brussels sprouts\"\n  }, {\n    id: 2,\n    name: \"Vegetarian Stir-Fry\",\n    calories: 380,\n    protein: \"16g\",\n    carbs: \"48g\",\n    fat: \"12g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Tofu and vegetable stir-fry with brown rice\"\n  }, {\n    id: 3,\n    name: \"Chicken Pasta\",\n    calories: 580,\n    protein: \"35g\",\n    carbs: \"65g\",\n    fat: \"18g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Whole grain pasta with grilled chicken and vegetables\"\n  }, {\n    id: 4,\n    name: \"Lean Beef Bowl\",\n    calories: 490,\n    protein: \"42g\",\n    carbs: \"38g\",\n    fat: \"20g\",\n    image: \"/api/placeholder/200/150\",\n    description: \"Lean beef with sweet potatoes and green beans\"\n  }]\n};\nconst MealPlanner = () => {\n  _s();\n  const [targetCalories, setTargetCalories] = useState('');\n  const [mealPlan, setMealPlan] = useState(null);\n  const [error, setError] = useState('');\n  const generateMealPlan = () => {\n    const calories = parseInt(targetCalories);\n    if (!calories || calories < 1000 || calories > 4000) {\n      setError('Please enter a target between 1000-4000 calories');\n      setMealPlan(null);\n      return;\n    }\n    setError('');\n\n    // Distribute calories: 30% breakfast, 35% lunch, 35% dinner\n    const breakfastCal = Math.floor(calories * 0.3);\n    const lunchCal = Math.floor(calories * 0.35);\n    const dinnerCal = Math.floor(calories * 0.35);\n\n    // Simple selection algorithm - choose meals closest to target calories\n    const selectedBreakfast = MEALS_DATABASE.breakfast.reduce((prev, curr) => Math.abs(curr.calories - breakfastCal) < Math.abs(prev.calories - breakfastCal) ? curr : prev);\n    const selectedLunch = MEALS_DATABASE.lunch.reduce((prev, curr) => Math.abs(curr.calories - lunchCal) < Math.abs(prev.calories - lunchCal) ? curr : prev);\n    const selectedDinner = MEALS_DATABASE.dinner.reduce((prev, curr) => Math.abs(curr.calories - dinnerCal) < Math.abs(prev.calories - dinnerCal) ? curr : prev);\n    setMealPlan({\n      breakfast: selectedBreakfast,\n      lunch: selectedLunch,\n      dinner: selectedDinner,\n      totalCalories: selectedBreakfast.calories + selectedLunch.calories + selectedDinner.calories\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-planner-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Daily Meal Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your target calories to get a personalized meal plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-planner-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetCalories,\n          onChange: e => setTargetCalories(e.target.value),\n          placeholder: \"Target calories (1000-4000)\",\n          min: \"1000\",\n          max: \"4000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateMealPlan,\n          children: \"Generate Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meal-planner-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), mealPlan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-plan-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-plan-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Daily Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Calories: \", mealPlan.totalCalories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mealPlan.breakfast.image,\n            alt: mealPlan.breakfast.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: mealPlan.breakfast.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-description\",\n            children: mealPlan.breakfast.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-nutrients\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Calories: \", mealPlan.breakfast.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Protein: \", mealPlan.breakfast.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Carbs: \", mealPlan.breakfast.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fat: \", mealPlan.breakfast.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mealPlan.lunch.image,\n            alt: mealPlan.lunch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: mealPlan.lunch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-description\",\n            children: mealPlan.lunch.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-nutrients\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Calories: \", mealPlan.lunch.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Protein: \", mealPlan.lunch.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Carbs: \", mealPlan.lunch.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fat: \", mealPlan.lunch.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mealPlan.dinner.image,\n            alt: mealPlan.dinner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: mealPlan.dinner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-description\",\n            children: mealPlan.dinner.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-nutrients\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Calories: \", mealPlan.dinner.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Protein: \", mealPlan.dinner.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Carbs: \", mealPlan.dinner.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fat: \", mealPlan.dinner.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(MealPlanner, \"8xXqlDuNiGi7G5D4snGpWdPth9A=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MEALS_DATABASE","breakfast","id","name","calories","protein","carbs","fat","image","description","lunch","dinner","MealPlanner","_s","targetCalories","setTargetCalories","mealPlan","setMealPlan","error","setError","generateMealPlan","parseInt","breakfastCal","Math","floor","lunchCal","dinnerCal","selectedBreakfast","reduce","prev","curr","abs","selectedLunch","selectedDinner","totalCalories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","min","max","onClick","src","alt","_c","$RefreshReg$"],"sources":["/home/asiradnan/A Laptop/Kaj Kormo/Code/Paid Projects/RannBhai-2.0/frontend/src/components/MealPlanning.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MealPlanner.css';\n\nconst MEALS_DATABASE = {\n    breakfast: [\n        { id: 1, name: \"Oatmeal with Berries\", calories: 350, protein: \"12g\", carbs: \"45g\", fat: \"8g\", image: \"/api/placeholder/200/150\", description: \"Steel-cut oats topped with mixed berries, honey, and almonds\" },\n        { id: 2, name: \"Greek Yogurt Parfait\", calories: 280, protein: \"15g\", carbs: \"32g\", fat: \"6g\", image: \"/api/placeholder/200/150\", description: \"Layered Greek yogurt with granola and fresh fruits\" },\n        { id: 3, name: \"Avocado Toast\", calories: 420, protein: \"14g\", carbs: \"38g\", fat: \"18g\", image: \"/api/placeholder/200/150\", description: \"Whole grain toast with mashed avocado, eggs, and cherry tomatoes\" },\n        { id: 4, name: \"Protein Smoothie Bowl\", calories: 310, protein: \"20g\", carbs: \"42g\", fat: \"5g\", image: \"/api/placeholder/200/150\", description: \"Protein-packed smoothie with banana, berries, and chia seeds\" }\n    ],\n    lunch: [\n        { id: 1, name: \"Quinoa Buddha Bowl\", calories: 450, protein: \"18g\", carbs: \"52g\", fat: \"12g\", image: \"/api/placeholder/200/150\", description: \"Quinoa bowl with roasted vegetables, chickpeas, and tahini dressing\" },\n        { id: 2, name: \"Grilled Chicken Salad\", calories: 380, protein: \"32g\", carbs: \"18g\", fat: \"14g\", image: \"/api/placeholder/200/150\", description: \"Mixed greens with grilled chicken, avocado, and balsamic vinaigrette\" },\n        { id: 3, name: \"Turkey Wrap\", calories: 420, protein: \"28g\", carbs: \"48g\", fat: \"16g\", image: \"/api/placeholder/200/150\", description: \"Whole wheat wrap with turkey, vegetables, and hummus\" },\n        { id: 4, name: \"Mediterranean Bowl\", calories: 520, protein: \"22g\", carbs: \"56g\", fat: \"15g\", image: \"/api/placeholder/200/150\", description: \"Falafel bowl with tabbouleh, hummus, and mixed vegetables\" }\n    ],\n    dinner: [\n        { id: 1, name: \"Salmon with Quinoa\", calories: 520, protein: \"38g\", carbs: \"42g\", fat: \"22g\", image: \"/api/placeholder/200/150\", description: \"Baked salmon with quinoa and roasted Brussels sprouts\" },\n        { id: 2, name: \"Vegetarian Stir-Fry\", calories: 380, protein: \"16g\", carbs: \"48g\", fat: \"12g\", image: \"/api/placeholder/200/150\", description: \"Tofu and vegetable stir-fry with brown rice\" },\n        { id: 3, name: \"Chicken Pasta\", calories: 580, protein: \"35g\", carbs: \"65g\", fat: \"18g\", image: \"/api/placeholder/200/150\", description: \"Whole grain pasta with grilled chicken and vegetables\" },\n        { id: 4, name: \"Lean Beef Bowl\", calories: 490, protein: \"42g\", carbs: \"38g\", fat: \"20g\", image: \"/api/placeholder/200/150\", description: \"Lean beef with sweet potatoes and green beans\" }\n    ]\n};\n\nconst MealPlanner = () => {\n    const [targetCalories, setTargetCalories] = useState('');\n    const [mealPlan, setMealPlan] = useState(null);\n    const [error, setError] = useState('');\n\n    const generateMealPlan = () => {\n        const calories = parseInt(targetCalories);\n        if (!calories || calories < 1000 || calories > 4000) {\n            setError('Please enter a target between 1000-4000 calories');\n            setMealPlan(null);\n            return;\n        }\n        setError('');\n\n        // Distribute calories: 30% breakfast, 35% lunch, 35% dinner\n        const breakfastCal = Math.floor(calories * 0.3);\n        const lunchCal = Math.floor(calories * 0.35);\n        const dinnerCal = Math.floor(calories * 0.35);\n\n        // Simple selection algorithm - choose meals closest to target calories\n        const selectedBreakfast = MEALS_DATABASE.breakfast.reduce((prev, curr) => \n            Math.abs(curr.calories - breakfastCal) < Math.abs(prev.calories - breakfastCal) ? curr : prev\n        );\n\n        const selectedLunch = MEALS_DATABASE.lunch.reduce((prev, curr) => \n            Math.abs(curr.calories - lunchCal) < Math.abs(prev.calories - lunchCal) ? curr : prev\n        );\n\n        const selectedDinner = MEALS_DATABASE.dinner.reduce((prev, curr) => \n            Math.abs(curr.calories - dinnerCal) < Math.abs(prev.calories - dinnerCal) ? curr : prev\n        );\n\n        setMealPlan({\n            breakfast: selectedBreakfast,\n            lunch: selectedLunch,\n            dinner: selectedDinner,\n            totalCalories: selectedBreakfast.calories + selectedLunch.calories + selectedDinner.calories\n        });\n    };\n\n    return (\n        <div className=\"meal-planner-container\">\n            <div className=\"meal-planner-header\">\n                <h1>Daily Meal Planner</h1>\n                <p>Enter your target calories to get a personalized meal plan</p>\n                \n                <div className=\"meal-planner-input\">\n                    <input\n                        type=\"number\"\n                        value={targetCalories}\n                        onChange={(e) => setTargetCalories(e.target.value)}\n                        placeholder=\"Target calories (1000-4000)\"\n                        min=\"1000\"\n                        max=\"4000\"\n                    />\n                    <button onClick={generateMealPlan}>Generate Plan</button>\n                </div>\n                \n                {error && <p className=\"meal-planner-error\">{error}</p>}\n            </div>\n\n            {mealPlan && (\n                <div className=\"meal-plan-results\">\n                    <div className=\"meal-plan-summary\">\n                        <h2>Your Daily Meal Plan</h2>\n                        <p>Total Calories: {mealPlan.totalCalories}</p>\n                    </div>\n                    \n                    <div className=\"meal-cards\">\n                        <div className=\"meal-card\">\n                            <h3>Breakfast</h3>\n                            <img src={mealPlan.breakfast.image} alt={mealPlan.breakfast.name} />\n                            <h4>{mealPlan.breakfast.name}</h4>\n                            <p className=\"meal-description\">{mealPlan.breakfast.description}</p>\n                            <div className=\"meal-nutrients\">\n                                <span>Calories: {mealPlan.breakfast.calories}</span>\n                                <span>Protein: {mealPlan.breakfast.protein}</span>\n                                <span>Carbs: {mealPlan.breakfast.carbs}</span>\n                                <span>Fat: {mealPlan.breakfast.fat}</span>\n                            </div>\n                        </div>\n\n                        <div className=\"meal-card\">\n                            <h3>Lunch</h3>\n                            <img src={mealPlan.lunch.image} alt={mealPlan.lunch.name} />\n                            <h4>{mealPlan.lunch.name}</h4>\n                            <p className=\"meal-description\">{mealPlan.lunch.description}</p>\n                            <div className=\"meal-nutrients\">\n                                <span>Calories: {mealPlan.lunch.calories}</span>\n                                <span>Protein: {mealPlan.lunch.protein}</span>\n                                <span>Carbs: {mealPlan.lunch.carbs}</span>\n                                <span>Fat: {mealPlan.lunch.fat}</span>\n                            </div>\n                        </div>\n\n                        <div className=\"meal-card\">\n                            <h3>Dinner</h3>\n                            <img src={mealPlan.dinner.image} alt={mealPlan.dinner.name} />\n                            <h4>{mealPlan.dinner.name}</h4>\n                            <p className=\"meal-description\">{mealPlan.dinner.description}</p>\n                            <div className=\"meal-nutrients\">\n                                <span>Calories: {mealPlan.dinner.calories}</span>\n                                <span>Protein: {mealPlan.dinner.protein}</span>\n                                <span>Carbs: {mealPlan.dinner.carbs}</span>\n                                <span>Fat: {mealPlan.dinner.fat}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}