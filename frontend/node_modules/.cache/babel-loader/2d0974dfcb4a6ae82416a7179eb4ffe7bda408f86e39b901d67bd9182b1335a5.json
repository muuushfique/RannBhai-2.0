{"ast":null,"code":"var _jsxFileName = \"/home/asiradnan/A Laptop/Kaj Kormo/Code/Paid Projects/RannBhai-2.0/frontend/src/components/MealPlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/MealPlanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlanner = () => {\n  _s();\n  const [targetCalories, setTargetCalories] = useState('');\n  const [mealPlan, setMealPlan] = useState(null);\n  const [error, setError] = useState('');\n  const [meals, setMeals] = useState({\n    breakfast: [],\n    lunch: [],\n    dinner: []\n  });\n  useEffect(() => {\n    fetchMeals();\n  }, []);\n  const fetchMeals = async () => {\n    try {\n      const response = await axios.get('http://localhost:1240/meals');\n      const categorizedMeals = {\n        breakfast: response.data.filter(meal => meal.category === 'Breakfast'),\n        lunch: response.data.filter(meal => meal.category === 'Lunch'),\n        dinner: response.data.filter(meal => meal.category === 'Dinner')\n      };\n      setMeals(categorizedMeals);\n    } catch (err) {\n      setError('Failed to load meals. Please try again later.');\n    }\n  };\n  const generateMealPlan = () => {\n    const calories = parseInt(targetCalories);\n    if (!calories || calories < 1000 || calories > 4000) {\n      setError('Please enter a target between 1000-4000 calories');\n      setMealPlan(null);\n      return;\n    }\n    setError('');\n\n    // Distribute calories: 30% breakfast, 35% lunch, 35% dinner\n    const breakfastCal = Math.floor(calories * 0.3);\n    const lunchCal = Math.floor(calories * 0.35);\n    const dinnerCal = Math.floor(calories * 0.35);\n\n    // Simple selection algorithm - choose meals closest to target calories\n    const selectedBreakfast = MEALS_DATABASE.breakfast.reduce((prev, curr) => Math.abs(curr.calories - breakfastCal) < Math.abs(prev.calories - breakfastCal) ? curr : prev);\n    const selectedLunch = MEALS_DATABASE.lunch.reduce((prev, curr) => Math.abs(curr.calories - lunchCal) < Math.abs(prev.calories - lunchCal) ? curr : prev);\n    const selectedDinner = MEALS_DATABASE.dinner.reduce((prev, curr) => Math.abs(curr.calories - dinnerCal) < Math.abs(prev.calories - dinnerCal) ? curr : prev);\n    setMealPlan({\n      breakfast: selectedBreakfast,\n      lunch: selectedLunch,\n      dinner: selectedDinner,\n      totalCalories: selectedBreakfast.calories + selectedLunch.calories + selectedDinner.calories\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-planner-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Daily Meal Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your target calories to get a personalized meal plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-planner-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetCalories,\n          onChange: e => setTargetCalories(e.target.value),\n          placeholder: \"Target calories (1000-4000)\",\n          min: \"1000\",\n          max: \"4000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateMealPlan,\n          children: \"Generate Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"meal-planner-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), mealPlan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-plan-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-plan-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Daily Meal Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Calories: \", mealPlan.totalCalories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mealPlan.breakfast.image,\n            alt: mealPlan.breakfast.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: mealPlan.breakfast.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-description\",\n            children: mealPlan.breakfast.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-nutrients\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Calories: \", mealPlan.breakfast.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Protein: \", mealPlan.breakfast.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Carbs: \", mealPlan.breakfast.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fat: \", mealPlan.breakfast.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mealPlan.lunch.image,\n            alt: mealPlan.lunch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: mealPlan.lunch.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-description\",\n            children: mealPlan.lunch.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-nutrients\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Calories: \", mealPlan.lunch.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Protein: \", mealPlan.lunch.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Carbs: \", mealPlan.lunch.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fat: \", mealPlan.lunch.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mealPlan.dinner.image,\n            alt: mealPlan.dinner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: mealPlan.dinner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"meal-description\",\n            children: mealPlan.dinner.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-nutrients\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Calories: \", mealPlan.dinner.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Protein: \", mealPlan.dinner.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Carbs: \", mealPlan.dinner.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Fat: \", mealPlan.dinner.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(MealPlanner, \"QyMkDlsyB1iXgPxLFcyOY+8vis4=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MealPlanner","_s","targetCalories","setTargetCalories","mealPlan","setMealPlan","error","setError","meals","setMeals","breakfast","lunch","dinner","fetchMeals","response","get","categorizedMeals","data","filter","meal","category","err","generateMealPlan","calories","parseInt","breakfastCal","Math","floor","lunchCal","dinnerCal","selectedBreakfast","MEALS_DATABASE","reduce","prev","curr","abs","selectedLunch","selectedDinner","totalCalories","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","min","max","onClick","src","image","alt","name","description","protein","carbs","fat","_c","$RefreshReg$"],"sources":["/home/asiradnan/A Laptop/Kaj Kormo/Code/Paid Projects/RannBhai-2.0/frontend/src/components/MealPlanning.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/MealPlanner.css';\n\nconst MealPlanner = () => {\n    const [targetCalories, setTargetCalories] = useState('');\n    const [mealPlan, setMealPlan] = useState(null);\n    const [error, setError] = useState('');\n    const [meals, setMeals] = useState({\n        breakfast: [],\n        lunch: [],\n        dinner: []\n    });\n\n    useEffect(() => {\n        fetchMeals();\n    }, []);\n\n    const fetchMeals = async () => {\n        try {\n            const response = await axios.get('http://localhost:1240/meals');\n            const categorizedMeals = {\n                breakfast: response.data.filter(meal => meal.category === 'Breakfast'),\n                lunch: response.data.filter(meal => meal.category === 'Lunch'),\n                dinner: response.data.filter(meal => meal.category === 'Dinner')\n            };\n            setMeals(categorizedMeals);\n        } catch (err) {\n            setError('Failed to load meals. Please try again later.');\n        }\n    };\n    const generateMealPlan = () => {\n        const calories = parseInt(targetCalories);\n        if (!calories || calories < 1000 || calories > 4000) {\n            setError('Please enter a target between 1000-4000 calories');\n            setMealPlan(null);\n            return;\n        }\n        setError('');\n\n        // Distribute calories: 30% breakfast, 35% lunch, 35% dinner\n        const breakfastCal = Math.floor(calories * 0.3);\n        const lunchCal = Math.floor(calories * 0.35);\n        const dinnerCal = Math.floor(calories * 0.35);\n\n        // Simple selection algorithm - choose meals closest to target calories\n        const selectedBreakfast = MEALS_DATABASE.breakfast.reduce((prev, curr) => \n            Math.abs(curr.calories - breakfastCal) < Math.abs(prev.calories - breakfastCal) ? curr : prev\n        );\n\n        const selectedLunch = MEALS_DATABASE.lunch.reduce((prev, curr) => \n            Math.abs(curr.calories - lunchCal) < Math.abs(prev.calories - lunchCal) ? curr : prev\n        );\n\n        const selectedDinner = MEALS_DATABASE.dinner.reduce((prev, curr) => \n            Math.abs(curr.calories - dinnerCal) < Math.abs(prev.calories - dinnerCal) ? curr : prev\n        );\n\n        setMealPlan({\n            breakfast: selectedBreakfast,\n            lunch: selectedLunch,\n            dinner: selectedDinner,\n            totalCalories: selectedBreakfast.calories + selectedLunch.calories + selectedDinner.calories\n        });\n    };\n\n    return (\n        <div className=\"meal-planner-container\">\n            <div className=\"meal-planner-header\">\n                <h1>Daily Meal Planner</h1>\n                <p>Enter your target calories to get a personalized meal plan</p>\n                \n                <div className=\"meal-planner-input\">\n                    <input\n                        type=\"number\"\n                        value={targetCalories}\n                        onChange={(e) => setTargetCalories(e.target.value)}\n                        placeholder=\"Target calories (1000-4000)\"\n                        min=\"1000\"\n                        max=\"4000\"\n                    />\n                    <button onClick={generateMealPlan}>Generate Plan</button>\n                </div>\n                \n                {error && <p className=\"meal-planner-error\">{error}</p>}\n            </div>\n\n            {mealPlan && (\n                <div className=\"meal-plan-results\">\n                    <div className=\"meal-plan-summary\">\n                        <h2>Your Daily Meal Plan</h2>\n                        <p>Total Calories: {mealPlan.totalCalories}</p>\n                    </div>\n                    \n                    <div className=\"meal-cards\">\n                        <div className=\"meal-card\">\n                            <h3>Breakfast</h3>\n                            <img src={mealPlan.breakfast.image} alt={mealPlan.breakfast.name} />\n                            <h4>{mealPlan.breakfast.name}</h4>\n                            <p className=\"meal-description\">{mealPlan.breakfast.description}</p>\n                            <div className=\"meal-nutrients\">\n                                <span>Calories: {mealPlan.breakfast.calories}</span>\n                                <span>Protein: {mealPlan.breakfast.protein}</span>\n                                <span>Carbs: {mealPlan.breakfast.carbs}</span>\n                                <span>Fat: {mealPlan.breakfast.fat}</span>\n                            </div>\n                        </div>\n\n                        <div className=\"meal-card\">\n                            <h3>Lunch</h3>\n                            <img src={mealPlan.lunch.image} alt={mealPlan.lunch.name} />\n                            <h4>{mealPlan.lunch.name}</h4>\n                            <p className=\"meal-description\">{mealPlan.lunch.description}</p>\n                            <div className=\"meal-nutrients\">\n                                <span>Calories: {mealPlan.lunch.calories}</span>\n                                <span>Protein: {mealPlan.lunch.protein}</span>\n                                <span>Carbs: {mealPlan.lunch.carbs}</span>\n                                <span>Fat: {mealPlan.lunch.fat}</span>\n                            </div>\n                        </div>\n\n                        <div className=\"meal-card\">\n                            <h3>Dinner</h3>\n                            <img src={mealPlan.dinner.image} alt={mealPlan.dinner.name} />\n                            <h4>{mealPlan.dinner.name}</h4>\n                            <p className=\"meal-description\">{mealPlan.dinner.description}</p>\n                            <div className=\"meal-nutrients\">\n                                <span>Calories: {mealPlan.dinner.calories}</span>\n                                <span>Protein: {mealPlan.dinner.protein}</span>\n                                <span>Carbs: {mealPlan.dinner.carbs}</span>\n                                <span>Fat: {mealPlan.dinner.fat}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MealPlanner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IAC/Be,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACZiB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,6BAA6B,CAAC;MAC/D,MAAMC,gBAAgB,GAAG;QACrBN,SAAS,EAAEI,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,WAAW,CAAC;QACtET,KAAK,EAAEG,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,OAAO,CAAC;QAC9DR,MAAM,EAAEE,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,KAAK,QAAQ;MACnE,CAAC;MACDX,QAAQ,CAACO,gBAAgB,CAAC;IAC9B,CAAC,CAAC,OAAOK,GAAG,EAAE;MACVd,QAAQ,CAAC,+CAA+C,CAAC;IAC7D;EACJ,CAAC;EACD,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAGC,QAAQ,CAACtB,cAAc,CAAC;IACzC,IAAI,CAACqB,QAAQ,IAAIA,QAAQ,GAAG,IAAI,IAAIA,QAAQ,GAAG,IAAI,EAAE;MACjDhB,QAAQ,CAAC,kDAAkD,CAAC;MAC5DF,WAAW,CAAC,IAAI,CAAC;MACjB;IACJ;IACAE,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,MAAMkB,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,GAAG,GAAG,CAAC;IAC/C,MAAMK,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACJ,QAAQ,GAAG,IAAI,CAAC;IAC5C,MAAMM,SAAS,GAAGH,IAAI,CAACC,KAAK,CAACJ,QAAQ,GAAG,IAAI,CAAC;;IAE7C;IACA,MAAMO,iBAAiB,GAAGC,cAAc,CAACrB,SAAS,CAACsB,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KACjER,IAAI,CAACS,GAAG,CAACD,IAAI,CAACX,QAAQ,GAAGE,YAAY,CAAC,GAAGC,IAAI,CAACS,GAAG,CAACF,IAAI,CAACV,QAAQ,GAAGE,YAAY,CAAC,GAAGS,IAAI,GAAGD,IAC7F,CAAC;IAED,MAAMG,aAAa,GAAGL,cAAc,CAACpB,KAAK,CAACqB,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KACzDR,IAAI,CAACS,GAAG,CAACD,IAAI,CAACX,QAAQ,GAAGK,QAAQ,CAAC,GAAGF,IAAI,CAACS,GAAG,CAACF,IAAI,CAACV,QAAQ,GAAGK,QAAQ,CAAC,GAAGM,IAAI,GAAGD,IACrF,CAAC;IAED,MAAMI,cAAc,GAAGN,cAAc,CAACnB,MAAM,CAACoB,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAC3DR,IAAI,CAACS,GAAG,CAACD,IAAI,CAACX,QAAQ,GAAGM,SAAS,CAAC,GAAGH,IAAI,CAACS,GAAG,CAACF,IAAI,CAACV,QAAQ,GAAGM,SAAS,CAAC,GAAGK,IAAI,GAAGD,IACvF,CAAC;IAED5B,WAAW,CAAC;MACRK,SAAS,EAAEoB,iBAAiB;MAC5BnB,KAAK,EAAEyB,aAAa;MACpBxB,MAAM,EAAEyB,cAAc;MACtBC,aAAa,EAAER,iBAAiB,CAACP,QAAQ,GAAGa,aAAa,CAACb,QAAQ,GAAGc,cAAc,CAACd;IACxF,CAAC,CAAC;EACN,CAAC;EAED,oBACIxB,OAAA;IAAKwC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnCzC,OAAA;MAAKwC,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCzC,OAAA;QAAAyC,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B7C,OAAA;QAAAyC,QAAA,EAAG;MAA0D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEjE7C,OAAA;QAAKwC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BzC,OAAA;UACI8C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAE5C,cAAe;UACtB6C,QAAQ,EAAGC,CAAC,IAAK7C,iBAAiB,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACnDI,WAAW,EAAC,6BAA6B;UACzCC,GAAG,EAAC,MAAM;UACVC,GAAG,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACF7C,OAAA;UAAQsD,OAAO,EAAE/B,gBAAiB;UAAAkB,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,EAELtC,KAAK,iBAAIP,OAAA;QAAGwC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAElC;MAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EAELxC,QAAQ,iBACLL,OAAA;MAAKwC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BzC,OAAA;QAAKwC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BzC,OAAA;UAAAyC,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B7C,OAAA;UAAAyC,QAAA,GAAG,kBAAgB,EAACpC,QAAQ,CAACkC,aAAa;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eAEN7C,OAAA;QAAKwC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBzC,OAAA;UAAKwC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBzC,OAAA;YAAAyC,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClB7C,OAAA;YAAKuD,GAAG,EAAElD,QAAQ,CAACM,SAAS,CAAC6C,KAAM;YAACC,GAAG,EAAEpD,QAAQ,CAACM,SAAS,CAAC+C;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpE7C,OAAA;YAAAyC,QAAA,EAAKpC,QAAQ,CAACM,SAAS,CAAC+C;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClC7C,OAAA;YAAGwC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEpC,QAAQ,CAACM,SAAS,CAACgD;UAAW;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpE7C,OAAA;YAAKwC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3BzC,OAAA;cAAAyC,QAAA,GAAM,YAAU,EAACpC,QAAQ,CAACM,SAAS,CAACa,QAAQ;YAAA;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpD7C,OAAA;cAAAyC,QAAA,GAAM,WAAS,EAACpC,QAAQ,CAACM,SAAS,CAACiD,OAAO;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAClD7C,OAAA;cAAAyC,QAAA,GAAM,SAAO,EAACpC,QAAQ,CAACM,SAAS,CAACkD,KAAK;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9C7C,OAAA;cAAAyC,QAAA,GAAM,OAAK,EAACpC,QAAQ,CAACM,SAAS,CAACmD,GAAG;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN7C,OAAA;UAAKwC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBzC,OAAA;YAAAyC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACd7C,OAAA;YAAKuD,GAAG,EAAElD,QAAQ,CAACO,KAAK,CAAC4C,KAAM;YAACC,GAAG,EAAEpD,QAAQ,CAACO,KAAK,CAAC8C;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5D7C,OAAA;YAAAyC,QAAA,EAAKpC,QAAQ,CAACO,KAAK,CAAC8C;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9B7C,OAAA;YAAGwC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEpC,QAAQ,CAACO,KAAK,CAAC+C;UAAW;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChE7C,OAAA;YAAKwC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3BzC,OAAA;cAAAyC,QAAA,GAAM,YAAU,EAACpC,QAAQ,CAACO,KAAK,CAACY,QAAQ;YAAA;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChD7C,OAAA;cAAAyC,QAAA,GAAM,WAAS,EAACpC,QAAQ,CAACO,KAAK,CAACgD,OAAO;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9C7C,OAAA;cAAAyC,QAAA,GAAM,SAAO,EAACpC,QAAQ,CAACO,KAAK,CAACiD,KAAK;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1C7C,OAAA;cAAAyC,QAAA,GAAM,OAAK,EAACpC,QAAQ,CAACO,KAAK,CAACkD,GAAG;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN7C,OAAA;UAAKwC,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBzC,OAAA;YAAAyC,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf7C,OAAA;YAAKuD,GAAG,EAAElD,QAAQ,CAACQ,MAAM,CAAC2C,KAAM;YAACC,GAAG,EAAEpD,QAAQ,CAACQ,MAAM,CAAC6C;UAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9D7C,OAAA;YAAAyC,QAAA,EAAKpC,QAAQ,CAACQ,MAAM,CAAC6C;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/B7C,OAAA;YAAGwC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEpC,QAAQ,CAACQ,MAAM,CAAC8C;UAAW;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjE7C,OAAA;YAAKwC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3BzC,OAAA;cAAAyC,QAAA,GAAM,YAAU,EAACpC,QAAQ,CAACQ,MAAM,CAACW,QAAQ;YAAA;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjD7C,OAAA;cAAAyC,QAAA,GAAM,WAAS,EAACpC,QAAQ,CAACQ,MAAM,CAAC+C,OAAO;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC/C7C,OAAA;cAAAyC,QAAA,GAAM,SAAO,EAACpC,QAAQ,CAACQ,MAAM,CAACgD,KAAK;YAAA;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C7C,OAAA;cAAAyC,QAAA,GAAM,OAAK,EAACpC,QAAQ,CAACQ,MAAM,CAACiD,GAAG;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3C,EAAA,CAtIID,WAAW;AAAA8D,EAAA,GAAX9D,WAAW;AAwIjB,eAAeA,WAAW;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}